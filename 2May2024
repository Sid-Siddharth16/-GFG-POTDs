

/*Complete the given function
Node is as follows:
class Tree{
    int data;
    Tree left,right;
    Tree(int d){
        data=d;
        left=right=null;
    }
}*/

class Tree {
    // Function to serialize a tree and return a list containing nodes of tree.
    void solve(Node root, ArrayList<Integer> arr){
        if(root == null){
            return;
        }
        solve(root.left,arr);
        arr.add(root.data);
        solve(root.right,arr);
    }
    public ArrayList<Integer> serialize(Node root) {
        // code here
        ArrayList<Integer> arr = new ArrayList<>();
        solve(root,arr);
        return arr;
    }

    // Function to deserialize a list and construct the tree.
    Node solve2(int i, int j, ArrayList<Integer> A){
        if(i>j){
            return null;
        }
        int mid = i+(j-i)/2;
        Node root = new Node(A.get(mid));
        root.left = solve2(i,mid-1,A);
        root.right = solve2(mid+1,j,A);
        return root;
    }
    public Node deSerialize(ArrayList<Integer> A) {
        // code hersov
        return solve2(0,A.size()-1,A);
    }
};
